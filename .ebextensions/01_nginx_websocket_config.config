files:
  "/etc/nginx/conf.d/websocket.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Properly map the upgrade headers for WebSockets
      map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
      }

      # Types hash size settings to address the warnings
      types_hash_max_size 2048;
      types_hash_bucket_size 128;

container_commands:
  01_remove_default_proxy_conf:
    command: |
      # Elastic Beanstalk creates default proxy config - we'll create our own
      rm -f /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf 2>/dev/null || true
      rm -f /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf 2>/dev/null || true
      
  02_create_custom_proxy_conf:
    command: |
      # Create custom proxy config file
      cat > /etc/nginx/conf.d/01_streamlit_proxy.conf << 'EOF'
      upstream streamlit_app {
        server 127.0.0.1:8000;
        keepalive 256;
      }
      
      server {
        listen 80;
        
        # Common proxy settings
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Main location for most requests
        location / {
          proxy_pass http://streamlit_app;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_read_timeout 86400;
        }
        
        # Special handling for WebSocket endpoint
        location /_stcore/stream {
          proxy_pass http://streamlit_app;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_read_timeout 86400;
          proxy_buffering off;
          proxy_cache off;
        }
      }
      EOF
      
  03_test_nginx_config:
    command: |
      # Test the Nginx configuration
      echo "Testing Nginx configuration..."
      result=$(nginx -t 2>&1) || echo "Nginx test result: $result"